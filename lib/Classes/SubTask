import 'package:cloud_firestore/cloud_firestore.dart';



class SubTask {
  final String subTaskID;
  final String taskID;
  String title;
  int completionStatus;

  SubTask({
    required this.subTaskID,
    required this.taskID,
    required this.title,
    required this.completionStatus,
  });

  // Add a new subtask
  static Future<void> addSubtask(SubTask subtask) async {
    await FirebaseFirestore.instance.collection('SubTask').doc(subtask.subTaskID).set({
      'taskID': subtask.taskID,
      'title': subtask.title,
      'completionStatus': subtask.completionStatus,
    });
  }

  // Delete a subtask
  static Future<void> deleteSubtask(String subTaskID) async {
    await FirebaseFirestore.instance.collection('SubTask').doc(subTaskID).delete();
  }

  // Toggle subtask completion
  Future<void> toggleCompletion() async {
    completionStatus = (completionStatus == 1) ? 0 : 1;
    await FirebaseFirestore.instance.collection('SubTask').doc(subTaskID).update({
      'completionStatus': completionStatus,
    });
  }

  // Fetch subtasks for a specific task
  static Future<List<SubTask>> fetchSubtasks(String taskID) async {
    QuerySnapshot subtaskSnapshot = await FirebaseFirestore.instance
        .collection('SubTask')
        .where('taskID', isEqualTo: taskID)
        .get();

    return subtaskSnapshot.docs.map((doc) {
      Map<String, dynamic> data = doc.data() as Map<String, dynamic>;
      return SubTask(
        subTaskID: doc.id,
        taskID: data['taskID'],
        title: data['title'],
        completionStatus: data['completionStatus'],
      );
    }).toList();
  }
}
