import 'package:cloud_firestore/cloud_firestore.dart';


class SubTask {
  final String subTaskID;  // Make sure this is 'subTaskID' with an uppercase 'T'
  final String taskID;
  String title;
  int completionStatus;

  SubTask({
    required this.subTaskID,  // Use 'subTaskID' here, matching the property name
    required this.taskID,
    required this.title,
    required this.completionStatus,
  });


  
   // Method to toggle completion of subtask and update in Firestore
 Future<void> updateCompletionStatus(int status) async {
    await FirebaseFirestore.instance.collection('SubTask').doc(subTaskID).update({
      'completionStatus': status,
    });
  }


   // Method to delete a specific subtask from Firestore
    Future<void> deleteSubTask() async {
    await FirebaseFirestore.instance.collection('SubTask').doc(this.subTaskID).delete();
  }


  // Fetch subtasks for a specific task
  static Future<List<SubTask>> fetchSubtasksForTask(String taskID) async {
    FirebaseFirestore firestore = FirebaseFirestore.instance;
    QuerySnapshot subtaskSnapshot = await firestore
        .collection('SubTask')
        .where('taskID', isEqualTo: taskID)
        .get();

    return subtaskSnapshot.docs.map((doc) {
      Map<String, dynamic> data = doc.data() as Map<String, dynamic>;
      return SubTask(
        subTaskID: doc.id,
        taskID: taskID,
        title: data['title'],
        completionStatus: data['completionStatus'],
      );
    }).toList();
  }
}